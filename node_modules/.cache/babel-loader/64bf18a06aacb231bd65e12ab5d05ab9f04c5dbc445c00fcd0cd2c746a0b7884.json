{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Maxmilian/01-starting-project 3/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  // const [nameIsValid, setNameIsValid] = useState(false)\n  const [nameIsTouched, setNameIsTouched] = useState(false);\n  const nameIsValid = enteredName.trim() === '' || enteredName.trim().length < 6;\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() !== '' && enteredName.trim().length >= 6) {\n      setNameIsValid(true);\n    }\n  };\n  const onBlurHandler = event => {\n    setNameIsTouched(true);\n    if (enteredName.trim() === '' && enteredName.trim().length < 6) {\n      setNameIsValid(false);\n      return;\n    } else {\n      setNameIsValid(true);\n    }\n    ;\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setNameIsTouched(true);\n    if (enteredName.trim() === '' || enteredName.trim().length < 6) {\n      setNameIsValid(false);\n      return;\n    } else {\n      setNameIsValid(true);\n    }\n    ;\n    setEnteredName('');\n    console.log('submitted successfully');\n  };\n  const nameInputIsInvalid = !nameIsValid && nameIsTouched;\n  const nameInputClasses = !nameInputIsInvalid ? 'form-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        value: enteredName,\n        onBlur: onBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"agsYnvskEV3mOgD1qbqJYdWG90Q=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","nameIsTouched","setNameIsTouched","nameIsValid","trim","length","nameChangeHandler","event","target","value","setNameIsValid","onBlurHandler","formSubmitHandler","preventDefault","console","log","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/Maxmilian/01-starting-project 3/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  // const [nameIsValid, setNameIsValid] = useState(false)\n  const [nameIsTouched, setNameIsTouched] = useState(false)\n  const nameIsValid = enteredName.trim() === '' || enteredName.trim().length < 6;\n\n\n\n\n  const nameChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n    if (enteredName.trim() !== '' && enteredName.trim().length >= 6)\n    {\n      setNameIsValid(true);\n    }\n  };\n  const onBlurHandler = (event) => {\n    setNameIsTouched(true)\n    if (enteredName.trim() === '' && enteredName.trim().length < 6)\n    {\n      setNameIsValid(false)\n      return;\n    } else\n    {\n      setNameIsValid(true)\n    };\n\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n    setNameIsTouched(true)\n    if (enteredName.trim() === '' || enteredName.trim().length < 6)\n    {\n      setNameIsValid(false)\n      return;\n    } else\n    {\n      setNameIsValid(true)\n    };\n\n    setEnteredName('');\n    console.log('submitted successfully');\n\n  };\n\n  const nameInputIsInvalid = !nameIsValid && nameIsTouched;\n  const nameInputClasses = !nameInputIsInvalid ? 'form-control' : 'form-control invalid';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameChangeHandler} value={enteredName}\n          onBlur={onBlurHandler} />\n        {nameInputIsInvalid && <p className='error-text'>please enter a valid name</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD;EACA,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMU,WAAW,GAAGJ,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,IAAIL,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC;EAK9E,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCP,cAAc,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAClC,IAAIV,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,IAAIL,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,IAAI,CAAC,EAC/D;MACEK,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EACD,MAAMC,aAAa,GAAIJ,KAAK,IAAK;IAC/BL,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIH,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,IAAIL,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAC9D;MACEK,cAAc,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,MACD;MACEA,cAAc,CAAC,IAAI,CAAC;IACtB;IAAC;EAEH,CAAC;EAED,MAAME,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;IACtBX,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIH,WAAW,CAACK,IAAI,EAAE,KAAK,EAAE,IAAIL,WAAW,CAACK,IAAI,EAAE,CAACC,MAAM,GAAG,CAAC,EAC9D;MACEK,cAAc,CAAC,KAAK,CAAC;MACrB;IACF,CAAC,MACD;MACEA,cAAc,CAAC,IAAI,CAAC;IACtB;IAAC;IAEDV,cAAc,CAAC,EAAE,CAAC;IAClBc,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAEvC,CAAC;EAED,MAAMC,kBAAkB,GAAG,CAACb,WAAW,IAAIF,aAAa;EACxD,MAAMgB,gBAAgB,GAAG,CAACD,kBAAkB,GAAG,cAAc,GAAG,sBAAsB;EAEtF,oBACErB,OAAA;IAAMuB,QAAQ,EAAEN,iBAAkB;IAAAO,QAAA,gBAChCxB,OAAA;MAAKyB,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BxB,OAAA;QAAO0B,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC9B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,QAAQ,EAAEtB,iBAAkB;QAACG,KAAK,EAAEV,WAAY;QAC3E8B,MAAM,EAAElB;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC1BT,kBAAkB,iBAAIrB,OAAA;QAAGyB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAyB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1E,eACN9B,OAAA;MAAKyB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BxB,OAAA;QAAAwB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC3B,EAAA,CA9DIF,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AAgEjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}